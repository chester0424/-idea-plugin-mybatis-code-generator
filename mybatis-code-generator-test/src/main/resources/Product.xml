<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zone.pusu.product.dao.IProductDao">
    <insert id="inert">
        INSERT INTO Product(
        id,
        name,
        amount
        )
        VALUES (
        #{id,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR},
        #{amount,jdbcType=INTEGER}
        )
    </insert>

    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO Product(
        id,
        name,
        amount
        )
        VALUES
        <foreach collection="coll" item="item" separator=",">
            (
            #{item.id},
            #{item.name},
            #{item.amount}
            )
        </foreach>
    </insert>

    <update id="update">
        UPDATE Product
        <set>
            name = #{name},
            amount = #{amount},
            goodWord = #{goodWord},
            content = #{content},
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE Product WHERE id = #{id}
    </delete>

    <select id="get">
        SELECT * FROM Product
        WHERE id = #{id}
    </select>

    <select id="getList" resultType="resultMap">
        SELECT * FROM Product
        <include refid="where"></include>
        <include refid="order"></include>
    </select>

    <select id="getCount" resultType="int">
        SELECT COUNT(*) FROM Product
        <include refid="where"></include>
        <include refid="order"></include>
    </select>

    <resultMap id="resultMap" type="zone.pusu.product.Product">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="amount" column="amount" jdbcType="INTEGER"/>
        <result property="goodWord" column="good_word" jdbcType="BIT"/>
        <result property="content" column="content" jdbcType="BLOB"/>
        <result property="createAt" column="create_at" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="where">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="id != null">
                AND ID like #{id}
            </if>
            <if test="id_array != null">
                AND id IN
                <foreach collection="id_array" item="value" open="(" separator="," close=")">#{value,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="name != null">
                AND name like #{id}
            </if>
            <if test="name_array != null">
                AND name IN
                <foreach collection="name_array" item="value" open="(" separator="," close=")">#{value,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="amount_range != null">
                AND amount <![CDATA[ >= ]]> #{amount_range.start} AND amount <![CDATA[ <= ]]>  #{amount_range.end}
            </if>
        </trim>
    </sql>
    <sql id="order">
        <trim prefix="ORDER BY">
            <if test="order_array != null">
                <foreach collection="order_array" item="value" separator=",">
                    <if test="order_array.contains('id_asc')">id</if>
                    <if test="order_array.contains('id_desc')">id DESC</if>
                    <if test="order_array.contains('name_asc')">name</if>
                    <if test="order_array.contains('name_desc')">name DESC</if>
                    <if test="order_array.contains('amount_asc')">amount</if>
                    <if test="order_array.contains('amount_desc')">amount DESC</if>
                    <if test="order_array.contains('goodWord_asc')">goodWord</if>
                    <if test="order_array.contains('goodWord_desc')">goodWord DESC</if>
                </foreach>
            </if>
        </trim>
    </sql>
</mapper>